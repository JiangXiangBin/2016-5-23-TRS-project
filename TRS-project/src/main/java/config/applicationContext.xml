<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
       
       
       ">
	<!-- hibernate默认的class路径 -->
	<!-- class="org.springframework.jdbc.datasource.DriverManagerDataSource" -->
	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- <property name="driverClass" value="com.mysql.jdbc.Driver"></property> -->
		<!--在druid中可以不使用driverclass，druid可以根据url自动识别。 目前可以支持20多种url，常见的jdbc driver都包括了。 -->
		<property name="url" value="jdbc:mysql://localhost/trsproject"></property>
		<property name="username" value="root"></property>
		<property name="password" value="123456"></property>

		<!--druid连接池 -->

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="30000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<property name="filters" value="stat" />

	</bean>
	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<!-- 别名 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- 表单生成策略，如果value为create时每次创建时都是新的表单，为update是为更新 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!--显示自动生成表单 -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 表示自动生成的格式 -->
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<property name="mappingDirectoryLocations">
			<list>
				<!-- hibernate映射文件的路径 -->
				<value>classpath:/entity</value>
			</list>
		</property>
	</bean>
	<!--
	<bean id="transactionManager"
	
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	 配置事务，使用代理的方式 

	<bean id="transactionProxy"
	
		class="">
		
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="transactionAttributes">
			<props>
				 如果使用-Exception,意思是对所有的异常异常都回滚 
				
				 PROPAGATION_REQUIRED是指,支持当前事务，如果当前没有事务，就新建一个事务 
				
				<prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>			
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

  -->

	<!-- 配置事务管理器 指定其作用的sessionFactory把事务交给Spring去处理 -->

 	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<!--  配置事务的传播特性-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		<!--  PROPAGATION_REQUIRED是指,支持当前事务，如果当前没有事务，就新建一个事务  -->
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.RuntimeException"/>
		</tx:attributes>
	</tx:advice>
	<!--  那些类的哪些方法参与事务 -->
	<aop:config>
       <!-- 
		拦截service.serviceimpl包及其子包下的所有实体类的所有方法,
		无论任何作用域(public,private) 
		-->
		<aop:pointcut id="allServiceMethod"	
			expression="execution(* service.Serviceimpl.*.*(..))"/>
		<aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice" />
	</aop:config>

</beans>  